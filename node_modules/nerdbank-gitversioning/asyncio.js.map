{"version":3,"sources":["../ts/asyncio.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;AAEb,yBAAyB;AAEzB,SAAgB,WAAW,CAAC,IAAY;IACpC,OAAO,IAAI,OAAO,CAAU,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;AACrE,CAAC;AAFD,kCAEC;AAAA,CAAC;AAEF,SAAgB,UAAU,CAAC,IAAY;IACnC,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;QAC9D,IAAI,GAAG,EAAE;YAAE,MAAM,CAAC,GAAG,CAAC,CAAC;SAAE;aAAM;YAAE,OAAO,CAAC,IAAI,CAAC,CAAA;SAAE;IACpD,CAAC,CAAC,CAAC,CAAC;AACR,CAAC;AAJD,gCAIC;AAED,SAAsB,oBAAoB,CAAC,IAAY;;QACnD,IAAI,CAAC,CAAC,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE;YAC5B,MAAM,UAAU,CAAC,IAAI,CAAC,CAAC;SAC1B;IACL,CAAC;CAAA;AAJD,oDAIC","file":"asyncio.js","sourcesContent":["'use string';\r\n\r\nimport * as fs from 'fs';\r\n\r\nexport function existsAsync(path: string) {\r\n    return new Promise<boolean>(resolve => fs.exists(path, resolve));\r\n};\r\n\r\nexport function mkdirAsync(path: string) {\r\n    return new Promise<any>((resolve, reject) => fs.mkdir(path, err => {\r\n        if (err) { reject(err); } else { resolve(null) }\r\n    }));\r\n}\r\n\r\nexport async function mkdirIfNotExistAsync(path: string) {\r\n    if (!(await existsAsync(path))) {\r\n        await mkdirAsync(path);\r\n    }\r\n}\r\n"]}