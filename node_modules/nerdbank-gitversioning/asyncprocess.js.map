{"version":3,"sources":["../ts/asyncprocess.ts"],"names":[],"mappings":";;;AAAA,oCAAoC;AAOpC,SAAgB,SAAS,CAAC,OAAe,EAAE,OAAwB;IAC/D,OAAO,IAAI,OAAO,CACd,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;QACrE,IAAI,KAAK,EAAE;YACP,MAAM,CAAC,KAAK,CAAC,CAAC;SACjB;aAAM;YACH,OAAO,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;SAC/C;IACL,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC;AATD,8BASC;AAAA,CAAC","file":"asyncprocess.js","sourcesContent":["import * as cp from 'child_process';\r\n\r\nexport interface IExecAsyncResult {\r\n    stdout: string;\r\n    stderr: string;\r\n}\r\n\r\nexport function execAsync(command: string, options?: cp.ExecOptions) {\r\n    return new Promise<IExecAsyncResult>(\r\n        (resolve, reject) => cp.exec(command, options, (error, stdout, stderr) => {\r\n            if (error) {\r\n                reject(error);\r\n            } else {\r\n                resolve({ stdout: stdout, stderr: stderr });\r\n            }\r\n        }));\r\n};\r\n"]}